{"version":3,"sources":["services/auth.service.js","components/login.component.js","components/register.component.js","services/auth-header.js","services/user-userId.js","services/user.service.js","components/home.component.js","components/profile.component.js","components/AddDepModal.js","components/EditDepModal.js","components/board-user.component.js","components/board-moderator.component.js","components/board-admin.component.js","App.js","serviceWorker.js","index.js"],"names":["API_URL","Email","Password","axios","post","then","response","data","message","console","log","localStorage","setItem","JSON","stringify","clear","removeItem","username","email","password","parse","getItem","required","value","className","role","Login","props","handleLogin","bind","onChangeUsername","onChangePassword","state","loading","e","this","setState","target","preventDefault","form","validateAll","checkBtn","context","_errors","length","AuthService","login","history","push","window","location","reload","error","resMessage","toString","src","alt","onSubmit","ref","c","htmlFor","type","name","onChange","validations","disabled","style","display","Component","isEmail","vusername","vpassword","Register","handleRegister","onChangeEmail","successful","register","authHeader","user","Authorization","getUserId","userId","get","headers","alertId","currency","exchange","threshold","active","put","delete","Home","content","UserService","getPublicContent","Profile","redirect","userReady","currentUser","getCurrentUser","to","userName","substring","substr","id","roles","map","index","AddDepModal","handleSubmit","event","number","valueAsNumber","addAlerts","Number","parseFloat","toFixed","Boolean","deps","alert","Modal","size","aria-labelledby","centered","Header","clooseButton","Title","Body","Row","Col","sm","Form","Group","controlId","Label","Control","placeholder","Button","variant","Footer","onClick","onHide","EditDepModal","updateAlerts","defaultValue","BoardUser","refreshList","addModalShow","editModalShow","currentTutorial","currentIndex","responsee","checked","handeClick","item","isChecked","key","parseInt","onOffAlert","prevState","el","getUserAlerts","confirm","deleteAlert","editModalClose","Table","striped","bordered","hover","dep","createDate","Check","label","ButtonToolbar","deleteDep","show","BoardModerator","getModeratorBoard","BoardAdmin","getAdminBoard","prevProps","fetch","process","method","header","course","status","App","logOut","showModeratorBoard","showAdminBoard","undefined","includes","logout","href","exact","path","component","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"mPAEMA,EAAU,oCAsCD,M,qFAnCb,SAAMC,EAAOC,GACX,OAAOC,IACJC,KAAKJ,EAAU,QAAS,CACvBC,QACAC,aAEDG,MAAK,SAAAC,GAOJ,OANIA,EAASC,KAAKC,UAChBC,QAAQC,IAAI,mBACZC,aAAaC,QAAQ,OAAQC,KAAKC,UAAUR,EAASC,QAIhDD,EAASC,U,oBAItB,WACEI,aAAaI,QACbJ,aAAaK,WAAW,U,sBAG1B,SAASC,EAAUC,EAAOC,GACxB,OAAOhB,IAAMC,KAAKJ,EAAU,SAAU,CACpCiB,WACAC,QACAC,e,4BAIJ,WACE,OAAON,KAAKO,MAAMT,aAAaU,QAAQ,a,gEC7BrCC,EAAW,SAAAC,GACf,IAAKA,EACH,OACE,qBAAKC,UAAU,qBAAqBC,KAAK,QAAzC,sCAOeC,E,kDACnB,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,YAAc,EAAKA,YAAYC,KAAjB,gBACnB,EAAKC,iBAAmB,EAAKA,iBAAiBD,KAAtB,gBACxB,EAAKE,iBAAmB,EAAKA,iBAAiBF,KAAtB,gBAExB,EAAKG,MAAQ,CACXf,SAAU,GACVE,SAAU,GACVc,SAAS,EACTzB,QAAS,IAVM,E,oDAcnB,SAAiB0B,GACfC,KAAKC,SAAS,CACZnB,SAAUiB,EAAEG,OAAOd,U,8BAIvB,SAAiBW,GACfC,KAAKC,SAAS,CACZjB,SAAUe,EAAEG,OAAOd,U,yBAIvB,SAAYW,GAAI,IAAD,OACbA,EAAEI,iBAEFH,KAAKC,SAAS,CACZ5B,QAAS,GACTyB,SAAS,IAGXE,KAAKI,KAAKC,cAEmC,IAAzCL,KAAKM,SAASC,QAAQC,QAAQC,OAChCC,EAAYC,MAAMX,KAAKH,MAAMf,SAAUkB,KAAKH,MAAMb,UAAUd,MAC1D,WACE,EAAKsB,MAAMoB,QAAQC,KAAK,YACxBC,OAAOC,SAASC,YAElB,SAAAC,GACE,IAAMC,EACHD,EAAM9C,UACL8C,EAAM9C,SAASC,MACf6C,EAAM9C,SAASC,KAAKC,SACtB4C,EAAM5C,SACN4C,EAAME,WAER,EAAKlB,SAAS,CACZH,SAAS,EACTzB,QAAS6C,OAKflB,KAAKC,SAAS,CACZH,SAAS,M,oBAKf,WAAU,IAAD,OACP,OACE,qBAAKT,UAAU,YAAf,SACE,sBAAKA,UAAU,sBAAf,UACE,qBACE+B,IAAI,8CACJC,IAAI,cACJhC,UAAU,qBAGZ,eAAC,IAAD,CACEiC,SAAUtB,KAAKP,YACf8B,IAAK,SAAAC,GACH,EAAKpB,KAAOoB,GAHhB,UAME,sBAAKnC,UAAU,aAAf,UACE,uBAAOoC,QAAQ,WAAf,sBACA,cAAC,IAAD,CACEC,KAAK,OACLrC,UAAU,eACVsC,KAAK,WACLvC,MAAOY,KAAKH,MAAMf,SAClB8C,SAAU5B,KAAKL,iBACfkC,YAAa,CAAC1C,QAIlB,sBAAKE,UAAU,aAAf,UACE,uBAAOoC,QAAQ,WAAf,sBACA,cAAC,IAAD,CACEC,KAAK,WACLrC,UAAU,eACVsC,KAAK,WACLvC,MAAOY,KAAKH,MAAMb,SAClB4C,SAAU5B,KAAKJ,iBACfiC,YAAa,CAAC1C,QAIlB,qBAAKE,UAAU,aAAf,SACE,yBACEA,UAAU,4BACVyC,SAAU9B,KAAKH,MAAMC,QAFvB,UAIGE,KAAKH,MAAMC,SACV,sBAAMT,UAAU,qCAElB,8CAIHW,KAAKH,MAAMxB,SACV,qBAAKgB,UAAU,aAAf,SACE,qBAAKA,UAAU,qBAAqBC,KAAK,QAAzC,SACGU,KAAKH,MAAMxB,YAIlB,cAAC,IAAD,CACE0D,MAAO,CAAEC,QAAS,QAClBT,IAAK,SAAAC,GACH,EAAKlB,SAAWkB,iB,GA9HGS,a,QCT7B9C,EAAW,SAAAC,GACf,IAAKA,EACH,OACE,qBAAKC,UAAU,qBAAqBC,KAAK,QAAzC,sCAOAP,EAAQ,SAAAK,GACZ,IAAK8C,kBAAQ9C,GACX,OACE,qBAAKC,UAAU,qBAAqBC,KAAK,QAAzC,yCAOA6C,EAAY,SAAA/C,GAChB,GAAIA,EAAMqB,OAAS,GAAKrB,EAAMqB,OAAS,GACrC,OACE,qBAAKpB,UAAU,qBAAqBC,KAAK,QAAzC,gEAOA8C,EAAY,SAAAhD,GAChB,GAAIA,EAAMqB,OAAS,GAAKrB,EAAMqB,OAAS,GACrC,OACE,qBAAKpB,UAAU,qBAAqBC,KAAK,QAAzC,gEAOe+C,E,kDACnB,WAAY7C,GAAQ,IAAD,8BACjB,cAAMA,IACD8C,eAAiB,EAAKA,eAAe5C,KAApB,gBACtB,EAAKC,iBAAmB,EAAKA,iBAAiBD,KAAtB,gBACxB,EAAK6C,cAAgB,EAAKA,cAAc7C,KAAnB,gBACrB,EAAKE,iBAAmB,EAAKA,iBAAiBF,KAAtB,gBAExB,EAAKG,MAAQ,CACXf,SAAU,GACVC,MAAO,GACPC,SAAU,GACVwD,YAAY,EACZnE,QAAS,IAZM,E,oDAgBnB,SAAiB0B,GACfC,KAAKC,SAAS,CACZnB,SAAUiB,EAAEG,OAAOd,U,2BAIvB,SAAcW,GACZC,KAAKC,SAAS,CACZlB,MAAOgB,EAAEG,OAAOd,U,8BAIpB,SAAiBW,GACfC,KAAKC,SAAS,CACZjB,SAAUe,EAAEG,OAAOd,U,4BAIvB,SAAeW,GAAI,IAAD,OAChBA,EAAEI,iBAEFH,KAAKC,SAAS,CACZ5B,QAAS,GACTmE,YAAY,IAGdxC,KAAKI,KAAKC,cAEmC,IAAzCL,KAAKM,SAASC,QAAQC,QAAQC,QAChCC,EAAY+B,SACVzC,KAAKH,MAAMf,SACXkB,KAAKH,MAAMd,MACXiB,KAAKH,MAAMb,UACXd,MACA,SAAAC,GACE,EAAK8B,SAAS,CACZ5B,QAASF,EAASC,KAAKC,QACvBmE,YAAY,OAGhB,SAAAvB,GACE,IAAMC,EACHD,EAAM9C,UACL8C,EAAM9C,SAASC,MACf6C,EAAM9C,SAASC,KAAKC,SACtB4C,EAAM5C,SACN4C,EAAME,WAER,EAAKlB,SAAS,CACZuC,YAAY,EACZnE,QAAS6C,S,oBAOnB,WAAU,IAAD,OACP,OACE,qBAAK7B,UAAU,YAAf,SACE,sBAAKA,UAAU,sBAAf,UACE,qBACE+B,IAAI,8CACJC,IAAI,cACJhC,UAAU,qBAGZ,eAAC,IAAD,CACEiC,SAAUtB,KAAKsC,eACff,IAAK,SAAAC,GACH,EAAKpB,KAAOoB,GAHhB,WAMIxB,KAAKH,MAAM2C,YACX,gCACE,sBAAKnD,UAAU,aAAf,UACE,uBAAOoC,QAAQ,WAAf,sBACA,cAAC,IAAD,CACEC,KAAK,OACLrC,UAAU,eACVsC,KAAK,WACLvC,MAAOY,KAAKH,MAAMf,SAClB8C,SAAU5B,KAAKL,iBACfkC,YAAa,CAAC1C,EAAUgD,QAI5B,sBAAK9C,UAAU,aAAf,UACE,uBAAOoC,QAAQ,QAAf,mBACA,cAAC,IAAD,CACEC,KAAK,OACLrC,UAAU,eACVsC,KAAK,QACLvC,MAAOY,KAAKH,MAAMd,MAClB6C,SAAU5B,KAAKuC,cACfV,YAAa,CAAC1C,EAAUJ,QAI5B,sBAAKM,UAAU,aAAf,UACE,uBAAOoC,QAAQ,WAAf,sBACA,cAAC,IAAD,CACEC,KAAK,WACLrC,UAAU,eACVsC,KAAK,WACLvC,MAAOY,KAAKH,MAAMb,SAClB4C,SAAU5B,KAAKJ,iBACfiC,YAAa,CAAC1C,EAAUiD,QAI5B,qBAAK/C,UAAU,aAAf,SACE,wBAAQA,UAAU,4BAAlB,0BAKLW,KAAKH,MAAMxB,SACV,qBAAKgB,UAAU,aAAf,SACE,qBACEA,UACEW,KAAKH,MAAM2C,WACP,sBACA,qBAENlD,KAAK,QANP,SAQGU,KAAKH,MAAMxB,YAIlB,cAAC,IAAD,CACE0D,MAAO,CAAEC,QAAS,QAClBT,IAAK,SAAAC,GACH,EAAKlB,SAAWkB,iB,GAvJMS,aChDvB,SAASS,IACtB,IAAMC,EAAOjE,KAAKO,MAAMT,aAAaU,QAAQ,SAE7C,OADAZ,QAAQC,IAAIoE,GACRA,GAAQA,EAAKtE,QACR,CAAEuE,cAAc,UAAD,OAAYD,EAAKtE,UAEhC,GCNI,SAASwE,IACtB,IAAMF,EAAOjE,KAAKO,MAAMT,aAAaU,QAAQ,SACvC4D,EAASH,EAAKG,OAEpB,OADAxE,QAAQC,IAAIoE,GACRA,GAAQA,EAAKG,OACRA,EAEA,GCHX,IAAMjF,EAAU,+BAmDD,M,gGA/Cb,WACE,OAAOG,IAAM+E,IAAIlF,EAAU,S,2BAG7B,WACE,OAAOG,IAAM+E,IAAIlF,EAAU,sBAAuB,CAAEmF,QAASN,Q,2BAG/D,WACE,OAAO1E,IAAM+E,IAAIlF,EAAU,uBAAwB,CAAEmF,QAASN,Q,0BAGhE,SAAaO,EAASC,EAAUC,EAAUC,EAAWC,GACnD,OAAOrF,IAAMsF,IAAIzF,EAAU,SAAWoF,EAAS,CAC7C,QAAWA,EAAS,OAAUJ,IAAa,SAAYK,EAAU,SAAYC,EAAU,UAAaC,EAAW,OAAUC,GACxH,CACDL,QACEN,Q,uBAIN,SAAUQ,EAAUC,EAAUC,EAAWC,GACvC,OAAOrF,IAAMC,KAAKJ,EAAU,iBAAkB,CAC5C,SAAYqF,EAAU,SAAYC,EAAU,UAAaC,EAAW,OAAUC,GAC7E,CACDL,QACEN,Q,yBAIN,SAAYO,GACV,OAAOjF,IAAMuF,OAAO1F,EAAU,SAAWoF,EAAS,CAChDD,QACEN,Q,wBAIN,SAAWO,GACT,OAAOjF,IAAMC,KAAKJ,EAAU,SAAWoF,EAAS,GAAI,CAClDD,QACEN,U,MC5Cac,E,kDACnB,WAAYhE,GAAQ,IAAD,8BACjB,cAAMA,IAEDK,MAAQ,CACX4D,QAAS,IAJM,E,qDAQnB,WAAqB,IAAD,OAClBC,EAAYC,mBAAmBzF,MAC7B,SAAAC,GACE,EAAK8B,SAAS,CACZwD,QAAStF,EAASC,UAGtB,SAAA6C,GACE,EAAKhB,SAAS,CACZwD,QACGxC,EAAM9C,UAAY8C,EAAM9C,SAASC,MAClC6C,EAAM5C,SACN4C,EAAME,kB,oBAMhB,WACE,OACE,qBAAK9B,UAAU,YAAf,SACE,wBAAQA,UAAU,YAAlB,SACE,6BAAKW,KAAKH,MAAM4D,kB,GA/BQxB,aCAb2B,E,kDACnB,WAAYpE,GAAQ,IAAD,8BACjB,cAAMA,IAEDK,MAAQ,CACXgE,SAAU,KACVC,WAAW,EACXC,YAAa,CAAEjF,SAAU,KANV,E,qDAUnB,WACE,IAAMiF,EAAcrD,EAAYsD,iBAE3BD,GAAa/D,KAAKC,SAAS,CAAE4D,SAAU,UAC5C7D,KAAKC,SAAS,CAAE8D,YAAaA,EAAaD,WAAW,M,oBAGvD,WACE,GAAI9D,KAAKH,MAAMgE,SACb,OAAO,cAAC,IAAD,CAAUI,GAAIjE,KAAKH,MAAMgE,WAF3B,IAKCE,EAAgB/D,KAAKH,MAArBkE,YAER,OACE,qBAAK1E,UAAU,YAAf,SACIW,KAAKH,MAAMiE,UACb,gCACA,wBAAQzE,UAAU,YAAlB,SACE,+BACE,iCAAS0E,EAAYG,WADvB,gBAIF,8BAEGH,EAAY1F,QAAQ8F,UAAU,EAAG,IAFpC,OAE6C,IAC1CJ,EAAY1F,QAAQ+F,OAAOL,EAAY1F,QAAQoC,OAAS,OAE3D,8BACE,yCAAqB,IACpBsD,EAAYM,MAEf,8BACE,4CAAwB,IACvBN,EAAYhF,SAEf,kDACA,6BACGgF,EAAYO,OACXP,EAAYO,MAAMC,KAAI,SAACjF,EAAMkF,GAAP,OAAiB,6BAAiBlF,GAARkF,WAE9C,W,GApDuBvC,a,gECAxBwC,EAAb,kDACI,WAAYjF,GAAQ,IAAD,8BACf,cAAMA,IACDkF,aAAe,EAAKA,aAAahF,KAAlB,gBAFL,EADvB,gDAMI,SAAaiF,GAAQ,IAAD,OAChBA,EAAMxE,iBAEN,IAAMyE,EAASD,EAAMzE,OAAOmD,OAAOwB,cAEnCnB,EAAYoB,UACRH,EAAMzE,OAAOgD,SAAS9D,MACtBuF,EAAMzE,OAAOiD,SAAS/D,MACtB2F,OAAOC,WAAWL,EAAMzE,OAAOkD,UAAUyB,eAAeI,QAAQ,IAChEC,UAAUN,IACZ1G,MACE,SAAAC,GACI,EAAK8B,SAAS,CACVkF,KAAMhH,EAASC,OAEnBgH,MAAM,WACNtE,OAAOC,SAASC,QAAO,MAE3B,SAAAC,GACI,EAAKhB,SAAS,CACVkF,KACKlE,EAAM9C,UACH8C,EAAM9C,SAASC,MACf6C,EAAM9C,SAASC,KAAKC,SACxB4C,EAAM5C,SACN4C,EAAME,kBA/B9B,oBAoCI,WACI,OACI,qBAAK9B,UAAU,YAAf,SAEI,eAACgG,EAAA,EAAD,2BACQrF,KAAKR,OADb,IAEI8F,KAAK,KACLC,kBAAgB,gCAChBC,UAAQ,EAJZ,UAMI,cAACH,EAAA,EAAMI,OAAP,CAAcC,cAAY,EAA1B,SACI,cAACL,EAAA,EAAMM,MAAP,CAAatB,GAAG,gCAAhB,8BAIJ,cAACgB,EAAA,EAAMO,KAAP,UAEI,cAACC,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,CAAKC,GAAI,EAAT,SACI,eAACC,EAAA,EAAD,CAAM1E,SAAUtB,KAAK0E,aAArB,UACI,eAACsB,EAAA,EAAKC,MAAN,CAAYC,UAAU,WAAtB,UACI,cAACF,EAAA,EAAKG,MAAN,qBACA,cAACH,EAAA,EAAKI,QAAN,CAAc1E,KAAK,OAAOC,KAAK,WAAWxC,UAAQ,EAC9CkH,YAAY,sBAGpB,eAACL,EAAA,EAAKC,MAAN,CAAYC,UAAU,WAAtB,UACI,cAACF,EAAA,EAAKG,MAAN,0BACA,cAACH,EAAA,EAAKI,QAAN,CAAc1E,KAAK,OAAOC,KAAK,WAAWxC,UAAQ,EAC9CkH,YAAY,+BAGpB,eAACL,EAAA,EAAKC,MAAN,CAAYC,UAAU,YAAtB,UACI,cAACF,EAAA,EAAKG,MAAN,6BACA,cAACH,EAAA,EAAKI,QAAN,CAAc1E,KAAK,SAASC,KAAK,YAAYxC,UAAQ,EACjDkH,YAAY,kBAGpB,eAACL,EAAA,EAAKC,MAAN,CAAYC,UAAU,SAAtB,UACI,cAACF,EAAA,EAAKG,MAAN,qBACA,cAACH,EAAA,EAAKI,QAAN,CAAc1E,KAAK,SAASC,KAAK,SAASxC,UAAQ,EAC9CkH,YAAY,cAGpB,cAACL,EAAA,EAAKC,MAAN,UACI,cAACK,EAAA,EAAD,CAAQC,QAAQ,UAAU7E,KAAK,SAA/B,uCASpB,cAAC2D,EAAA,EAAMmB,OAAP,UACI,cAACF,EAAA,EAAD,CAAQC,QAAQ,SAASE,QAASzG,KAAKR,MAAMkH,OAA7C,+BA3FxB,GAAiCzE,aCApB0E,EAAb,kDACI,WAAYnH,GAAQ,IAAD,8BACf,cAAMA,IAEDkF,aAAe,EAAKA,aAAahF,KAAlB,gBAHL,EADvB,gDAOI,SAAaiF,GAAQ,IAAD,OAChBA,EAAMxE,iBAEN,IAAMyE,EAASD,EAAMzE,OAAOmD,OAAOwB,cAEnCnB,EAAYkD,aACR5G,KAAKR,MAAMyD,QAEX0B,EAAMzE,OAAOgD,SAAS9D,MACtBuF,EAAMzE,OAAOiD,SAAS/D,MACtB2F,OAAOC,WAAWL,EAAMzE,OAAOkD,UAAUyB,eAAeI,QAAQ,IAChEC,UAAUN,IACZ1G,MACE,SAAAC,GACI,EAAK8B,SAAS,CACVkF,KAAMhH,EAASC,OAEnBgH,MAAM,WACNtE,OAAOC,SAASC,QAAO,MAE3B,SAAAC,GACI,EAAKhB,SAAS,CACVkF,KACKlE,EAAM9C,UACH8C,EAAM9C,SAASC,MACf6C,EAAM9C,SAASC,KAAKC,SACxB4C,EAAM5C,SACN4C,EAAME,kBAlC9B,oBAuCI,WACI,OACI,qBAAK9B,UAAU,YAAf,SAEI,eAACgG,EAAA,EAAD,2BACQrF,KAAKR,OADb,IAEI8F,KAAK,KACLC,kBAAgB,gCAChBC,UAAQ,EAJZ,UAMI,cAACH,EAAA,EAAMI,OAAP,CAAcC,cAAY,EAA1B,SACI,cAACL,EAAA,EAAMM,MAAP,CAAatB,GAAG,gCAAhB,+BAIJ,cAACgB,EAAA,EAAMO,KAAP,UAEI,cAACC,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,CAAKC,GAAI,EAAT,SACI,eAACC,EAAA,EAAD,CAAM1E,SAAUtB,KAAK0E,aAArB,UACI,eAACsB,EAAA,EAAKC,MAAN,CAAYC,UAAU,UAAtB,UACI,cAACF,EAAA,EAAKG,MAAN,sBACA,cAACH,EAAA,EAAKI,QAAN,CAAc1E,KAAK,SAASC,KAAK,UAAUxC,UAAQ,EAC/C2C,UAAQ,EACR+E,aAAc7G,KAAKR,MAAMyD,QACzBoD,YAAY,eAGpB,eAACL,EAAA,EAAKC,MAAN,CAAYC,UAAU,WAAtB,UACI,cAACF,EAAA,EAAKG,MAAN,qBACA,cAACH,EAAA,EAAKI,QAAN,CAAc1E,KAAK,OAAOC,KAAK,WAAWxC,UAAQ,EAC9C0H,aAAc7G,KAAKR,MAAM0D,SACzBmD,YAAY,gBAGpB,eAACL,EAAA,EAAKC,MAAN,CAAYC,UAAU,WAAtB,UACI,cAACF,EAAA,EAAKG,MAAN,0BACA,cAACH,EAAA,EAAKI,QAAN,CAAc1E,KAAK,OAAOC,KAAK,WAAWxC,UAAQ,EAC9C0H,aAAc7G,KAAKR,MAAM2D,SACzBkD,YAAY,gBAGpB,eAACL,EAAA,EAAKC,MAAN,CAAYC,UAAU,YAAtB,UACI,cAACF,EAAA,EAAKG,MAAN,sBACA,cAACH,EAAA,EAAKI,QAAN,CAAc1E,KAAK,SAASC,KAAK,YAAYxC,UAAQ,EACjD0H,aAAc7G,KAAKR,MAAM4D,UACzBiD,YAAY,iBAGpB,eAACL,EAAA,EAAKC,MAAN,CAAYC,UAAU,SAAtB,UACI,cAACF,EAAA,EAAKG,MAAN,sBACA,cAACH,EAAA,EAAKI,QAAN,CAAc1E,KAAK,SAASC,KAAK,SAASxC,UAAQ,EAC9C0H,aAAc7G,KAAKR,MAAM6D,OACzBgD,YAAY,eAGpB,cAACL,EAAA,EAAKC,MAAN,UACI,cAACK,EAAA,EAAD,CAAQC,QAAQ,UAAU7E,KAAK,SAA/B,0CASpB,cAAC2D,EAAA,EAAMmB,OAAP,UACI,cAACF,EAAA,EAAD,CAAQC,QAAQ,SAASE,QAASzG,KAAKR,MAAMkH,OAA7C,+BA1GxB,GAAkCzE,aCIb6E,G,wDACnB,WAAYtH,GAAQ,IAAD,8BACjB,cAAMA,IAEDuH,YAAc,EAAKA,YAAYrH,KAAjB,gBAEnB,EAAKG,MAAQ,CACXsF,KAAM,GAAI6B,cAAc,EAAOC,eAAe,EAAOC,gBAAiB,KACtEC,cAAe,EAAGC,UAAW,KAAMC,QAAS,IAE9C,EAAKC,WAAa,EAAKA,WAAW5H,KAAhB,gBATD,E,8CAYnB,SAAWK,GAAI,IAAD,OACZzB,QAAQC,IAAI,mBAAqBwB,EAAEG,OAAOmE,IAC1C,IAAMkD,EAAOxH,EAAEG,OAAOyB,KAChB6F,EAAYzH,EAAEG,OAAOmH,QAC3B/I,QAAQC,IAAI,mBAAqBgJ,GACjCjJ,QAAQC,IAAI,mBAAqBiJ,GACjC,IAAIC,EAAMC,SAAS3H,EAAEG,OAAOmE,IAC5B/F,QAAQC,IAAI,OAASkJ,GAErB/D,EAAYiE,WAAWD,SAAS3H,EAAEG,OAAOmE,KAAKnG,MAC5C,SAAAC,GACE,EAAK8B,UACH,SAAA2H,GAAS,MAAK,CAEZzC,KAAMyC,EAAUzC,KAAKZ,KACnB,SAAAsD,GAAE,OAAIA,EAAG5E,UAAYwE,EAAf,2BAA0BI,GAA1B,IAA8BxE,OAAQlF,EAASC,OAASyJ,YAItE,SAAA5G,GACE,EAAKhB,SAAS,CACZkF,KACGlE,EAAM9C,UACL8C,EAAM9C,SAASC,MACf6C,EAAM9C,SAASC,KAAKC,SACtB4C,EAAM5C,SACN4C,EAAME,kB,+BAUhB,WAAqB,IAAD,OAClBuC,EAAYoE,gBAAgB5J,MAC1B,SAAAC,GACE,EAAK8B,SAAS,CACZkF,KAAMhH,EAASC,UAGnB,SAAA6C,GACE,EAAKhB,SAAS,CACZkF,KACGlE,EAAM9C,UACL8C,EAAM9C,SAASC,MACf6C,EAAM9C,SAASC,KAAKC,SACtB4C,EAAM5C,SACN4C,EAAME,kB,yBAMhB,WAAe,IAAD,OACZuC,EAAYoE,gBAAgB5J,MAC1B,SAAAC,GACE,EAAK8B,SAAS,CACZkF,KAAMhH,EAASC,UAGnB,SAAA6C,GACE,EAAKhB,SAAS,CACZkF,KACGlE,EAAM9C,UACL8C,EAAM9C,SAASC,MACf6C,EAAM9C,SAASC,KAAKC,SACtB4C,EAAM5C,SACN4C,EAAME,kB,uBAMhB,SAAU8B,GAAU,IAAD,OACbnC,OAAOiH,QAAQ,wBACjBrE,EAAYsE,YAAY/E,GAAS/E,MAC/B,SAAAC,GACE,EAAK4I,iBAEP,SAAA9F,GACE,EAAKhB,SAAS,CACZkF,KACGlE,EAAM9C,UACL8C,EAAM9C,SAASC,MACf6C,EAAM9C,SAASC,KAAKC,SACtB4C,EAAM5C,SACN4C,EAAME,kB,oBAMlB,WAAU,IAAD,SAC0DnB,KAAKH,MAA9DsF,EADD,EACCA,KAAMlC,EADP,EACOA,QAASC,EADhB,EACgBA,SAAUC,EAD1B,EAC0BA,SAAUC,EADpC,EACoCA,UAAWC,EAD/C,EAC+CA,OAElD4E,EAAiB,kBAAM,EAAKhI,SAAS,CAAEgH,eAAe,KAC1D,OACE,gCACE,eAACiB,EAAA,EAAD,CAAO7I,UAAU,OAAO8I,SAAO,EAACC,UAAQ,EAACC,OAAK,EAAC/C,KAAK,KAApD,UACE,gCACE,+BACE,wCACA,6CACA,yCACA,+CACA,mDACA,2CACA,yCACA,4CAGJ,gCACGH,EAAKZ,KAAI,SAAA+D,GAAG,OACX,+BACE,6BAAKA,EAAIpF,WACT,6BAAKoF,EAAInF,WACT,6BAAKmF,EAAIlF,YACT,+CACA,mDACA,6BAAKkF,EAAIC,aACT,6BACE,cAACvC,EAAA,EAAD,UACE,cAACA,EAAA,EAAKwC,MAAN,CACE5G,SAAU,EAAK0F,WACfD,QAASiB,EAAIjF,OACbhE,UAAU,eACVsC,KAAM2G,EAAIpF,SACVxB,KAAK,SACL2C,GAAIiE,EAAIrF,QACRwF,MAAM,SAQZ,6BACE,eAACC,EAAA,EAAD,WACE,cAACpC,EAAA,EAAD,CAAQjH,UAAU,OAAOkH,QAAQ,OAC/BE,QAAS,kBAAM,EAAKxG,SAAS,CAC3BgH,eAAe,EACfhE,QAASqF,EAAIrF,QAASC,SAAUoF,EAAIpF,SAAUC,SAAUmF,EAAInF,SAAUC,UAAWkF,EAAIlF,UAAWC,OAAQiF,EAAIjF,UAHhH,kBAQA,cAACiD,EAAA,EAAD,CAAQjH,UAAU,OAAOkH,QAAQ,SAC/BE,QAAS,kBAAM,EAAKkC,UAAUL,EAAIrF,UADpC,oBAKA,cAAC,EAAD,CAAc2F,KAAM,EAAK/I,MAAMoH,cAC7BP,OAAQuB,EACRhF,QAASA,EACTC,SAAUA,EACVC,SAAUA,EACVC,UAAWA,EACXC,OAAQA,WA7CPiF,EAAIrF,iBAwDnB,eAACyF,EAAA,EAAD,WACE,cAACpC,EAAA,EAAD,CAAQC,QAAQ,UACdE,QAAS,kBAAM,EAAKxG,SAAS,CAAE+G,cAAc,KAD/C,4BAIA,cAAC,EAAD,CAAa4B,KAAM5I,KAAKH,MAAMmH,aAC5BN,OAjFY,kBAAM,EAAKzG,SAAS,CAAE+G,cAAc,iB,GA9GrB/E,cCJlB4G,E,kDACnB,WAAYrJ,GAAQ,IAAD,8BACjB,cAAMA,IAEDK,MAAQ,CACX4D,QAAS,IAJM,E,qDAQnB,WAAqB,IAAD,OAClBC,EAAYoF,oBAAoB5K,MAC9B,SAAAC,GACE,EAAK8B,SAAS,CACZwD,QAAStF,EAASC,UAGtB,SAAA6C,GACE,EAAKhB,SAAS,CACZwD,QACGxC,EAAM9C,UACL8C,EAAM9C,SAASC,MACf6C,EAAM9C,SAASC,KAAKC,SACtB4C,EAAM5C,SACN4C,EAAME,kB,oBAMhB,WACE,OACE,qBAAK9B,UAAU,YAAf,SACE,wBAAQA,UAAU,YAAlB,SACE,6BAAKW,KAAKH,MAAM4D,kB,GAjCkBxB,aCIvB8G,E,kDACnB,WAAYvJ,GAAQ,IAAD,8BACjB,cAAMA,IAEDK,MAAQ,CAEXsF,KAAK,GAAI6B,cAAa,EAAOC,eAAc,GAL5B,E,qDA6BnB,WAAqB,IAAD,OAClBvD,EAAYsF,gBAAgB9K,MAC1B,SAAAC,GACE,EAAK8B,SAAS,CACZkF,KAAMhH,EAASC,UAInB,SAAA6C,GACE,EAAKhB,SAAS,CACZkF,KACGlE,EAAM9C,UACL8C,EAAM9C,SAASC,MACf6C,EAAM9C,SAASC,KAAKC,SACtB4C,EAAM5C,SACN4C,EAAME,kB,gCAMhB,SAAmB8H,GACjB3K,QAAQC,IAAI,uBACZyB,KAAKR,MAAMyD,UAAYgG,EAAUhG,UACjCjD,KAAK+G,cACLzI,QAAQC,IAAI,uB,uBAIhB,SAAU0E,GACLnC,OAAOiH,QAAQ,wBACdmB,MAAMC,qCAAmClG,EAAQ,CAC7CmG,OAAO,SACPC,OAAO,CAAC,OAAS,mBACrB,eAAe,wB,oBAKnB,WAAU,IAAD,SAC2DrJ,KAAKH,MAAhEsF,EADA,EACAA,KAAMlC,EADN,EACMA,QAASH,EADf,EACeA,OAAQK,EADvB,EACuBA,SAAUmG,EADjC,EACiCA,OAAQpG,EADzC,EACyCA,SAAUqG,EADnD,EACmDA,OAElDtB,EAAe,kBAAI,EAAKhI,SAAS,CAACgH,eAAc,KACpD,OACI,gCACI,eAACiB,EAAA,EAAD,CAAO7I,UAAU,OAAO8I,SAAO,EAACC,UAAQ,EAACC,OAAK,EAAC/C,KAAK,KAApD,UACI,gCACI,+BACI,yCACJ,wCACA,6CACA,sCACA,6CACA,wCACA,8CAGJ,gCACKH,EAAKZ,KAAI,SAAA+D,GAAG,OACT,+BACI,6BAAKA,EAAIrF,UACT,6BAAKqF,EAAIxF,SACT,6BAAKwF,EAAInF,WACT,6BAAKmF,EAAIgB,SACT,6BAAKhB,EAAIpF,WACT,6BAAKoF,EAAIiB,SACT,6BAChC,eAACb,EAAA,EAAD,WACI,cAACpC,EAAA,EAAD,CAAQjH,UAAU,OAAOkH,QAAQ,OACjCE,QAAS,kBAAI,EAAKxG,SAAS,CAACgH,eAAc,EACtChE,QAAQqF,EAAIrF,QAAQH,OAAOwF,EAAIxF,OAAOK,SAASmF,EAAInF,SAASmG,OAAOhB,EAAIgB,OAAOpG,SAASoF,EAAIpF,SAASqG,OAAOjB,EAAIiB,UAFnH,kBAMI,cAACjD,EAAA,EAAD,CAAQjH,UAAU,OAAOkH,QAAQ,SACrCE,QAAS,kBAAI,EAAKkC,UAAUL,EAAIrF,UAD5B,oBAKA,cAAC,EAAD,CAAc2F,KAAM,EAAK/I,MAAMoH,cAC/BP,OAAQuB,EACRhF,QAASA,EACTH,OAAQA,EACRK,SAAUA,EACVmG,OAAQA,EACRpG,SAAUA,EACVqG,OAAQA,WA3BqBjB,EAAIrF,iBAsCzB,eAACyF,EAAA,EAAD,WACI,cAACpC,EAAA,EAAD,CAAQC,QAAQ,UAChBE,QAAS,kBAAI,EAAKxG,SAAS,CAAC+G,cAAa,KADzC,4BAIA,cAAC,EAAD,CAAa4B,KAAM5I,KAAKH,MAAMmH,aAC9BN,OA9DM,kBAAI,EAAKzG,SAAS,CAAC+G,cAAa,iB,GAvElB/E,aC2JzBuH,E,kDAlHb,WAAYhK,GAAQ,IAAD,8BACjB,cAAMA,IACDiK,OAAS,EAAKA,OAAO/J,KAAZ,gBAEd,EAAKG,MAAQ,CACX6J,oBAAoB,EACpBC,gBAAgB,EAChB5F,iBAAa6F,GAPE,E,qDAWnB,WACE,IAAMjH,EAAOjC,EAAYsD,iBAErBrB,GACF3C,KAAKC,SAAS,CACZ8D,YAAapB,EAEbgH,eAAgBhH,EAAKrD,KAAKuK,SAAS,a,oBAKzC,WACEnJ,EAAYoJ,W,oBAGd,WAAU,IAAD,EACqD9J,KAAKH,MAAzDkE,EADD,EACCA,YAAa2F,EADd,EACcA,mBAAoBC,EADlC,EACkCA,eAEzC,OACE,gCACE,sBAAKtK,UAAU,2CAAf,UACE,cAAC,IAAD,CAAM4E,GAAI,IAAK5E,UAAU,eAAzB,sBAGA,sBAAKA,UAAU,qBAAf,UACE,oBAAIA,UAAU,WAAd,SACE,cAAC,IAAD,CAAM4E,GAAI,QAAS5E,UAAU,WAA7B,oBAKDqK,GACC,oBAAIrK,UAAU,WAAd,SACE,cAAC,IAAD,CAAM4E,GAAI,OAAQ5E,UAAU,WAA5B,+BAMHsK,GACC,oBAAItK,UAAU,WAAd,SACE,cAAC,IAAD,CAAM4E,GAAI,SAAU5E,UAAU,WAA9B,2BAMH0E,GACC,oBAAI1E,UAAU,WAAd,SACE,cAAC,IAAD,CAAM4E,GAAI,QAAS5E,UAAU,WAA7B,uBAOL0E,EACC,sBAAK1E,UAAU,qBAAf,UACE,oBAAIA,UAAU,WAAd,SACE,cAAC,IAAD,CAAM4E,GAAI,WAAY5E,UAAU,WAAhC,SACG0E,EAAYjF,aAGjB,oBAAIO,UAAU,WAAd,SACE,mBAAG0K,KAAK,SAAS1K,UAAU,WAAWoH,QAASzG,KAAKyJ,OAApD,yBAMJ,sBAAKpK,UAAU,qBAAf,UACE,oBAAIA,UAAU,WAAd,SACE,cAAC,IAAD,CAAM4E,GAAI,SAAU5E,UAAU,WAA9B,qBAKF,oBAAIA,UAAU,WAAd,SACE,cAAC,IAAD,CAAM4E,GAAI,YAAa5E,UAAU,WAAjC,6BAQR,qBAAKA,UAAU,iBAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAO2K,OAAK,EAACC,KAAM,CAAC,IAAK,SAAUC,UAAW1G,IAC9C,cAAC,IAAD,CAAOwG,OAAK,EAACC,KAAK,SAASC,UAAW3K,IACtC,cAAC,IAAD,CAAOyK,OAAK,EAACC,KAAK,YAAYC,UAAW7H,IACzC,cAAC,IAAD,CAAO2H,OAAK,EAACC,KAAK,WAAWC,UAAWtG,IACxC,cAAC,IAAD,CAAOqG,KAAK,QAAQC,UAAWpD,IAC/B,cAAC,IAAD,CAAOmD,KAAK,OAAOC,UAAWrB,IAC9B,cAAC,IAAD,CAAOoB,KAAK,SAASC,UAAWnB,gB,GA3G1B9G,aCpCEiD,QACW,cAA7BpE,OAAOC,SAASoJ,UAEe,UAA7BrJ,OAAOC,SAASoJ,UAEhBrJ,OAAOC,SAASoJ,SAASC,MACvB,2DCWNC,IAASC,OACP,cAAC,IAAD,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SDkGpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBzM,MAAK,SAAA0M,GACJA,EAAaC,gBAEdC,OAAM,SAAA7J,GACL3C,QAAQ2C,MAAMA,EAAM5C,c","file":"static/js/main.20b43e67.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst API_URL = \"https://localhost:44363/api/auth/\";\n\nclass AuthService {\n  login(Email, Password) {\n    return axios\n      .post(API_URL + \"login\", {\n        Email,\n        Password\n      })\n      .then(response => {\n        if (response.data.message) {\n          console.log('Chyba ustawiono')\n          localStorage.setItem(\"user\", JSON.stringify(response.data));\n         \n        }\n\n        return response.data;\n      });\n  }\n\n  logout() {\n    localStorage.clear();\n    localStorage.removeItem(\"user\");\n  }\n\n  register(username, email, password) {\n    return axios.post(API_URL + \"signup\", {\n      username,\n      email,\n      password\n    });\n  }\n\n  getCurrentUser() {\n    return JSON.parse(localStorage.getItem('user'));;\n  }\n}\n\nexport default new AuthService();\n","import React, { Component } from \"react\";\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport CheckButton from \"react-validation/build/button\";\n\nimport AuthService from \"../services/auth.service\";\n\nconst required = value => {\n  if (!value) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        This field is required!\n      </div>\n    );\n  }\n};\n\nexport default class Login extends Component {\n  constructor(props) {\n    super(props);\n    this.handleLogin = this.handleLogin.bind(this);\n    this.onChangeUsername = this.onChangeUsername.bind(this);\n    this.onChangePassword = this.onChangePassword.bind(this);\n\n    this.state = {\n      username: \"\",\n      password: \"\",\n      loading: false,\n      message: \"\"\n    };\n  }\n\n  onChangeUsername(e) {\n    this.setState({\n      username: e.target.value\n    });\n  }\n\n  onChangePassword(e) {\n    this.setState({\n      password: e.target.value\n    });\n  }\n\n  handleLogin(e) {\n    e.preventDefault();\n\n    this.setState({\n      message: \"\",\n      loading: true\n    });\n\n    this.form.validateAll();\n\n    if (this.checkBtn.context._errors.length === 0) {\n      AuthService.login(this.state.username, this.state.password).then(\n        () => {\n          this.props.history.push(\"/profile\");\n          window.location.reload();\n        },\n        error => {\n          const resMessage =\n            (error.response &&\n              error.response.data &&\n              error.response.data.message) ||\n            error.message ||\n            error.toString();\n\n          this.setState({\n            loading: false,\n            message: resMessage\n          });\n        }\n      );\n    } else {\n      this.setState({\n        loading: false\n      });\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"col-md-12\">\n        <div className=\"card card-container\">\n          <img\n            src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\n            alt=\"profile-img\"\n            className=\"profile-img-card\"\n          />\n\n          <Form\n            onSubmit={this.handleLogin}\n            ref={c => {\n              this.form = c;\n            }}\n          >\n            <div className=\"form-group\">\n              <label htmlFor=\"username\">Username</label>\n              <Input\n                type=\"text\"\n                className=\"form-control\"\n                name=\"username\"\n                value={this.state.username}\n                onChange={this.onChangeUsername}\n                validations={[required]}\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <label htmlFor=\"password\">Password</label>\n              <Input\n                type=\"password\"\n                className=\"form-control\"\n                name=\"password\"\n                value={this.state.password}\n                onChange={this.onChangePassword}\n                validations={[required]}\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <button\n                className=\"btn btn-primary btn-block\"\n                disabled={this.state.loading}\n              >\n                {this.state.loading && (\n                  <span className=\"spinner-border spinner-border-sm\"></span>\n                )}\n                <span>Login</span>\n              </button>\n            </div>\n\n            {this.state.message && (\n              <div className=\"form-group\">\n                <div className=\"alert alert-danger\" role=\"alert\">\n                  {this.state.message}\n                </div>\n              </div>\n            )}\n            <CheckButton\n              style={{ display: \"none\" }}\n              ref={c => {\n                this.checkBtn = c;\n              }}\n            />\n          </Form>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport CheckButton from \"react-validation/build/button\";\nimport { isEmail } from \"validator\";\n\nimport AuthService from \"../services/auth.service\";\n\nconst required = value => {\n  if (!value) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        This field is required!\n      </div>\n    );\n  }\n};\n\nconst email = value => {\n  if (!isEmail(value)) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        This is not a valid email.\n      </div>\n    );\n  }\n};\n\nconst vusername = value => {\n  if (value.length < 3 || value.length > 20) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        The username must be between 3 and 20 characters.\n      </div>\n    );\n  }\n};\n\nconst vpassword = value => {\n  if (value.length < 6 || value.length > 40) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        The password must be between 6 and 40 characters.\n      </div>\n    );\n  }\n};\n\nexport default class Register extends Component {\n  constructor(props) {\n    super(props);\n    this.handleRegister = this.handleRegister.bind(this);\n    this.onChangeUsername = this.onChangeUsername.bind(this);\n    this.onChangeEmail = this.onChangeEmail.bind(this);\n    this.onChangePassword = this.onChangePassword.bind(this);\n\n    this.state = {\n      username: \"\",\n      email: \"\",\n      password: \"\",\n      successful: false,\n      message: \"\"\n    };\n  }\n\n  onChangeUsername(e) {\n    this.setState({\n      username: e.target.value\n    });\n  }\n\n  onChangeEmail(e) {\n    this.setState({\n      email: e.target.value\n    });\n  }\n\n  onChangePassword(e) {\n    this.setState({\n      password: e.target.value\n    });\n  }\n\n  handleRegister(e) {\n    e.preventDefault();\n\n    this.setState({\n      message: \"\",\n      successful: false\n    });\n\n    this.form.validateAll();\n\n    if (this.checkBtn.context._errors.length === 0) {\n      AuthService.register(\n        this.state.username,\n        this.state.email,\n        this.state.password\n      ).then(\n        response => {\n          this.setState({\n            message: response.data.message,\n            successful: true\n          });\n        },\n        error => {\n          const resMessage =\n            (error.response &&\n              error.response.data &&\n              error.response.data.message) ||\n            error.message ||\n            error.toString();\n\n          this.setState({\n            successful: false,\n            message: resMessage\n          });\n        }\n      );\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"col-md-12\">\n        <div className=\"card card-container\">\n          <img\n            src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\n            alt=\"profile-img\"\n            className=\"profile-img-card\"\n          />\n\n          <Form\n            onSubmit={this.handleRegister}\n            ref={c => {\n              this.form = c;\n            }}\n          >\n            {!this.state.successful && (\n              <div>\n                <div className=\"form-group\">\n                  <label htmlFor=\"username\">Username</label>\n                  <Input\n                    type=\"text\"\n                    className=\"form-control\"\n                    name=\"username\"\n                    value={this.state.username}\n                    onChange={this.onChangeUsername}\n                    validations={[required, vusername]}\n                  />\n                </div>\n\n                <div className=\"form-group\">\n                  <label htmlFor=\"email\">Email</label>\n                  <Input\n                    type=\"text\"\n                    className=\"form-control\"\n                    name=\"email\"\n                    value={this.state.email}\n                    onChange={this.onChangeEmail}\n                    validations={[required, email]}\n                  />\n                </div>\n\n                <div className=\"form-group\">\n                  <label htmlFor=\"password\">Password</label>\n                  <Input\n                    type=\"password\"\n                    className=\"form-control\"\n                    name=\"password\"\n                    value={this.state.password}\n                    onChange={this.onChangePassword}\n                    validations={[required, vpassword]}\n                  />\n                </div>\n\n                <div className=\"form-group\">\n                  <button className=\"btn btn-primary btn-block\">Sign Up</button>\n                </div>\n              </div>\n            )}\n\n            {this.state.message && (\n              <div className=\"form-group\">\n                <div\n                  className={\n                    this.state.successful\n                      ? \"alert alert-success\"\n                      : \"alert alert-danger\"\n                  }\n                  role=\"alert\"\n                >\n                  {this.state.message}\n                </div>\n              </div>\n            )}\n            <CheckButton\n              style={{ display: \"none\" }}\n              ref={c => {\n                this.checkBtn = c;\n              }}\n            />\n          </Form>\n        </div>\n      </div>\n    );\n  }\n}\n","export default function authHeader() {\r\n  const user = JSON.parse(localStorage.getItem('user'));\r\n  console.log(user);\r\n  if (user && user.message) {\r\n    return { Authorization: `Bearer ${user.message}` };\r\n  } else {\r\n    return {};\r\n  }\r\n}","export default function getUserId() {\r\n  const user = JSON.parse(localStorage.getItem('user'));\r\n  const userId = user.userId;\r\n  console.log(user);\r\n  if (user && user.userId) {\r\n    return userId;\r\n  } else {\r\n    return {};\r\n  }\r\n}","import axios from 'axios';\nimport authHeader from './auth-header';\nimport getUserId from './user-userId';\n\nconst API_URL = 'https://localhost:44363/api/';\n\nclass UserService {\n  //public\n  getPublicContent() {\n    return axios.get(API_URL + 'all');\n  }\n  //user \n  getUserAlerts() {\n    return axios.get(API_URL + 'Alert/AlertsForUser', { headers: authHeader() });\n  }\n  //admin\n  getAdminBoard() {\n    return axios.get(API_URL + 'Alert/AlertsForAdmin', { headers: authHeader() });\n  }\n  //universal\n  updateAlerts(alertId, currency, exchange, threshold, active) {\n    return axios.put(API_URL + 'Alert/' + alertId, {\n      \"alertId\": alertId, \"userId\": getUserId(), \"currency\": currency, \"exchange\": exchange, \"threshold\": threshold, \"active\": active\n    }, {\n      headers:\n        authHeader()\n    })\n  }\n\n  addAlerts(currency, exchange, threshold, active) {\n    return axios.post(API_URL + 'Alert/AddAlert', {\n      \"currency\": currency, \"exchange\": exchange, \"threshold\": threshold, \"active\": active\n    }, {\n      headers:\n        authHeader()\n    })\n  }\n\n  deleteAlert(alertId) {\n    return axios.delete(API_URL + 'Alert/' + alertId, {\n      headers:\n        authHeader()\n    });\n  }\n\n  onOffAlert(alertId) {\n    return axios.post(API_URL + 'Alert/' + alertId, {}, {\n      headers:\n        authHeader()\n    })\n  }\n\n\n}\n\nexport default new UserService();\n","import React, { Component } from \"react\";\n\nimport UserService from \"../services/user.service\";\n\nexport default class Home extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      content: \"\"\n    };\n  }\n\n  componentDidMount() {\n    UserService.getPublicContent().then(\n      response => {\n        this.setState({\n          content: response.data\n        });\n      },\n      error => {\n        this.setState({\n          content:\n            (error.response && error.response.data) ||\n            error.message ||\n            error.toString()\n        });\n      }\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <header className=\"jumbotron\">\n          <h3>{this.state.content}</h3>\n        </header>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport AuthService from \"../services/auth.service\";\n\nexport default class Profile extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      redirect: null,\n      userReady: false,\n      currentUser: { username: \"\" }\n    };\n  }\n\n  componentDidMount() {\n    const currentUser = AuthService.getCurrentUser();\n\n    if (!currentUser) this.setState({ redirect: \"/home\" });\n    this.setState({ currentUser: currentUser, userReady: true })\n  }\n\n  render() {\n    if (this.state.redirect) {\n      return <Redirect to={this.state.redirect} />\n    }\n\n    const { currentUser } = this.state;\n\n    return (\n      <div className=\"container\">\n        {(this.state.userReady) ?\n        <div>\n        <header className=\"jumbotron\">\n          <h3>\n            <strong>{currentUser.userName}</strong> Profile\n          </h3>\n        </header>\n        <p>\n          \n          {currentUser.message.substring(0, 20)} ...{\" \"}\n          {currentUser.message.substr(currentUser.message.length - 20)}\n        </p>\n        <p>\n          <strong>Id:</strong>{\" \"}\n          {currentUser.id}\n        </p>\n        <p>\n          <strong>Email:</strong>{\" \"}\n          {currentUser.email}\n        </p>\n        <strong>Authorities:</strong>\n        <ul>\n          {currentUser.roles &&\n            currentUser.roles.map((role, index) => <li key={index}>{role}</li>)}\n        </ul>\n      </div>: null}\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\r\nimport { Modal, Button, Row, Col, Form } from 'react-bootstrap';\r\nimport UserService from \"../services/user.service\";\r\n\r\nexport class AddDepModal extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        event.preventDefault();\r\n\r\n        const number = event.target.active.valueAsNumber;\r\n\r\n        UserService.addAlerts(\r\n            event.target.currency.value,\r\n            event.target.exchange.value,\r\n            Number(parseFloat(event.target.threshold.valueAsNumber).toFixed(2)),\r\n            Boolean(!!number)\r\n        ).then(\r\n            response => {\r\n                this.setState({\r\n                    deps: response.data,\r\n                });\r\n                alert(\"Sukces!\");\r\n                window.location.reload(false);\r\n            },\r\n            error => {\r\n                this.setState({\r\n                    deps:\r\n                        (error.response &&\r\n                            error.response.data &&\r\n                            error.response.data.message) ||\r\n                        error.message ||\r\n                        error.toString()\r\n                });\r\n            }\r\n        );\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n\r\n                <Modal\r\n                    {...this.props}\r\n                    size=\"lg\"\r\n                    aria-labelledby=\"contained-modal-title-vcenter\"\r\n                    centered\r\n                >\r\n                    <Modal.Header clooseButton>\r\n                        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                            Add Department\r\n                        </Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n\r\n                        <Row>\r\n                            <Col sm={6}>\r\n                                <Form onSubmit={this.handleSubmit}>\r\n                                    <Form.Group controlId=\"currency\">\r\n                                        <Form.Label>Waluta</Form.Label>\r\n                                        <Form.Control type=\"text\" name=\"currency\" required\r\n                                            placeholder=\"Wybierz walute\" />\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group controlId=\"exchange\">\r\n                                        <Form.Label>Giełda</Form.Label>\r\n                                        <Form.Control type=\"text\" name=\"exchange\" required\r\n                                            placeholder=\"Wpisz nazwe giełdy\" />\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group controlId=\"threshold\">\r\n                                        <Form.Label>Próg cenowy</Form.Label>\r\n                                        <Form.Control type=\"number\" name=\"threshold\" required\r\n                                            placeholder=\"Wpisz kurs\" />\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group controlId=\"active\">\r\n                                        <Form.Label>ON/OFF</Form.Label>\r\n                                        <Form.Control type=\"number\" name=\"active\" required\r\n                                            placeholder=\"ON/OFF\" />\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group>\r\n                                        <Button variant=\"primary\" type=\"submit\">\r\n                                            Add Department\r\n                                        </Button>\r\n                                    </Form.Group>\r\n                                </Form>\r\n                            </Col>\r\n                        </Row>\r\n                    </Modal.Body>\r\n\r\n                    <Modal.Footer>\r\n                        <Button variant=\"danger\" onClick={this.props.onHide}>Close</Button>\r\n                    </Modal.Footer>\r\n\r\n                </Modal>\r\n\r\n            </div>\r\n        )\r\n    }\r\n\r\n}","import React, { Component } from 'react';\r\nimport { Modal, Button, Row, Col, Form } from 'react-bootstrap';\r\nimport UserService from \"../services/user.service\";\r\n\r\nexport class EditDepModal extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        event.preventDefault();\r\n\r\n        const number = event.target.active.valueAsNumber;\r\n\r\n        UserService.updateAlerts(\r\n            this.props.alertId,\r\n\r\n            event.target.currency.value,\r\n            event.target.exchange.value,\r\n            Number(parseFloat(event.target.threshold.valueAsNumber).toFixed(2)),\r\n            Boolean(!!number)\r\n        ).then(\r\n            response => {\r\n                this.setState({\r\n                    deps: response.data\r\n                });\r\n                alert(\"Sukces!\");\r\n                window.location.reload(false);\r\n            },\r\n            error => {\r\n                this.setState({\r\n                    deps:\r\n                        (error.response &&\r\n                            error.response.data &&\r\n                            error.response.data.message) ||\r\n                        error.message ||\r\n                        error.toString()\r\n                });\r\n            }\r\n        );\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n\r\n                <Modal\r\n                    {...this.props}\r\n                    size=\"lg\"\r\n                    aria-labelledby=\"contained-modal-title-vcenter\"\r\n                    centered\r\n                >\r\n                    <Modal.Header clooseButton>\r\n                        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                            Edit Department\r\n                        </Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n\r\n                        <Row>\r\n                            <Col sm={6}>\r\n                                <Form onSubmit={this.handleSubmit}>\r\n                                    <Form.Group controlId=\"AlertId\">\r\n                                        <Form.Label>AlertId</Form.Label>\r\n                                        <Form.Control type=\"number\" name=\"alertId\" required\r\n                                            disabled\r\n                                            defaultValue={this.props.alertId}\r\n                                            placeholder=\"Alertid\" />\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group controlId=\"Currency\">\r\n                                        <Form.Label>Waluta</Form.Label>\r\n                                        <Form.Control type=\"text\" name=\"currency\" required\r\n                                            defaultValue={this.props.currency}\r\n                                            placeholder=\"Currency\" />\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group controlId=\"Exchange\">\r\n                                        <Form.Label>Giełda</Form.Label>\r\n                                        <Form.Control type=\"text\" name=\"exchange\" required\r\n                                            defaultValue={this.props.exchange}\r\n                                            placeholder=\"Exchange\" />\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group controlId=\"threshold\">\r\n                                        <Form.Label>Próg</Form.Label>\r\n                                        <Form.Control type=\"number\" name=\"threshold\" required\r\n                                            defaultValue={this.props.threshold}\r\n                                            placeholder=\"threshold\" />\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group controlId=\"active\">\r\n                                        <Form.Label>Aktywny</Form.Label>\r\n                                        <Form.Control type=\"number\" name=\"active\" required\r\n                                            defaultValue={this.props.active}\r\n                                            placeholder=\"Aktywny\" />\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group>\r\n                                        <Button variant=\"primary\" type=\"submit\">\r\n                                            Update Department\r\n                                        </Button>\r\n                                    </Form.Group>\r\n                                </Form>\r\n                            </Col>\r\n                        </Row>\r\n                    </Modal.Body>\r\n\r\n                    <Modal.Footer>\r\n                        <Button variant=\"danger\" onClick={this.props.onHide}>Close</Button>\r\n                    </Modal.Footer>\r\n\r\n                </Modal>\r\n\r\n            </div>\r\n        )\r\n    }\r\n\r\n}","import React, { Component } from \"react\";\r\nimport { Table } from 'react-bootstrap';\r\nimport { Button, ButtonToolbar, Form, FormCheck, FormGroup } from 'react-bootstrap';\r\nimport { AddDepModal } from './AddDepModal';\r\nimport { EditDepModal } from './EditDepModal';\r\nimport BootstrapSwitchButton from 'bootstrap-switch-button-react';\r\nimport UserService from \"../services/user.service\";\r\n\r\nexport default class BoardUser extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.refreshList = this.refreshList.bind(this);\r\n\r\n    this.state = {\r\n      deps: [], addModalShow: false, editModalShow: false, currentTutorial: null,\r\n      currentIndex: -1, responsee: null, checked: ''\r\n    };\r\n    this.handeClick = this.handeClick.bind(this);\r\n  }\r\n\r\n  handeClick(e) {\r\n    console.log(\"Wurde geklickt: \" + e.target.id);\r\n    const item = e.target.name;\r\n    const isChecked = e.target.checked;\r\n    console.log(\"Wurde geklickt: \" + item);\r\n    console.log(\"Wurde geklickt: \" + isChecked);\r\n    var key = parseInt(e.target.id);\r\n    console.log(\"Key \" + key);\r\n\r\n    UserService.onOffAlert(parseInt(e.target.id)).then(\r\n      response => {\r\n        this.setState(\r\n          prevState => ({\r\n\r\n            deps: prevState.deps.map(\r\n              el => el.alertId === key ? { ...el, active: response.data } : el\r\n            )\r\n          }));\r\n      },\r\n      error => {\r\n        this.setState({\r\n          deps:\r\n            (error.response &&\r\n              error.response.data &&\r\n              error.response.data.message) ||\r\n            error.message ||\r\n            error.toString()\r\n        });\r\n      }\r\n    );\r\n\r\n\r\n\r\n\r\n  }\r\n\r\n  componentDidMount() {\r\n    UserService.getUserAlerts().then(\r\n      response => {\r\n        this.setState({\r\n          deps: response.data\r\n        });\r\n      },\r\n      error => {\r\n        this.setState({\r\n          deps:\r\n            (error.response &&\r\n              error.response.data &&\r\n              error.response.data.message) ||\r\n            error.message ||\r\n            error.toString()\r\n        });\r\n      }\r\n    );\r\n  }\r\n\r\n  refreshList() {\r\n    UserService.getUserAlerts().then(\r\n      response => {\r\n        this.setState({\r\n          deps: response.data\r\n        });\r\n      },\r\n      error => {\r\n        this.setState({\r\n          deps:\r\n            (error.response &&\r\n              error.response.data &&\r\n              error.response.data.message) ||\r\n            error.message ||\r\n            error.toString()\r\n        });\r\n      }\r\n    );\r\n  }\r\n\r\n  deleteDep(alertId) {\r\n    if (window.confirm('Jesteś pewien?')) {\r\n      UserService.deleteAlert(alertId).then(\r\n        response => {\r\n          this.refreshList();\r\n        },\r\n        error => {\r\n          this.setState({\r\n            deps:\r\n              (error.response &&\r\n                error.response.data &&\r\n                error.response.data.message) ||\r\n              error.message ||\r\n              error.toString()\r\n          });\r\n        }\r\n      )\r\n    }\r\n  }\r\n  render() {\r\n    const { deps, alertId, currency, exchange, threshold, active } = this.state;\r\n    let addModalClose = () => this.setState({ addModalShow: false });\r\n    let editModalClose = () => this.setState({ editModalShow: false });\r\n    return (\r\n      <div >\r\n        <Table className=\"mt-4\" striped bordered hover size=\"sm\">\r\n          <thead>\r\n            <tr>\r\n              <th>Waluta</th>\r\n              <th>Giełda</th>\r\n              <th>Próg</th>\r\n              <th>Aktualna cena</th>\r\n              <th>Aktualizacja ceny</th>\r\n              <th>Utworzono</th>\r\n              <th>Aktywny</th>\r\n              <th>Opcje</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {deps.map(dep =>\r\n              <tr key={dep.alertId}>\r\n                <td>{dep.currency}</td>\r\n                <td>{dep.exchange}</td>\r\n                <td>{dep.threshold}</td>\r\n                <td>aktualna cena</td>\r\n                <td>data aktualizacji</td>\r\n                <td>{dep.createDate}</td>\r\n                <td>\r\n                  <Form>\r\n                    <Form.Check\r\n                      onChange={this.handeClick}\r\n                      checked={dep.active}\r\n                      className=\"checkBoxCard\"\r\n                      name={dep.currency}\r\n                      type=\"switch\"\r\n                      id={dep.alertId}\r\n                      label=\"\"\r\n                    />\r\n                  </Form>\r\n\r\n\r\n                </td>\r\n\r\n\r\n                <td>\r\n                  <ButtonToolbar>\r\n                    <Button className=\"mr-2\" variant=\"info\"\r\n                      onClick={() => this.setState({\r\n                        editModalShow: true,\r\n                        alertId: dep.alertId, currency: dep.currency, exchange: dep.exchange, threshold: dep.threshold, active: dep.active\r\n                      })}>\r\n                      Edit\r\n                    </Button>\r\n\r\n                    <Button className=\"mr-2\" variant=\"danger\"\r\n                      onClick={() => this.deleteDep(dep.alertId)}>\r\n                      Delete\r\n                    </Button>\r\n\r\n                    <EditDepModal show={this.state.editModalShow}\r\n                      onHide={editModalClose}\r\n                      alertId={alertId}\r\n                      currency={currency}\r\n                      exchange={exchange}\r\n                      threshold={threshold}\r\n                      active={active}\r\n                    />\r\n                  </ButtonToolbar>\r\n\r\n                </td>\r\n\r\n              </tr>)}\r\n          </tbody>\r\n\r\n        </Table>\r\n\r\n        <ButtonToolbar>\r\n          <Button variant='primary'\r\n            onClick={() => this.setState({ addModalShow: true })}>\r\n            Add Department</Button>\r\n\r\n          <AddDepModal show={this.state.addModalShow}\r\n            onHide={addModalClose} />\r\n        </ButtonToolbar>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\n\nimport UserService from \"../services/user.service\";\n\nexport default class BoardModerator extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      content: \"\"\n    };\n  }\n\n  componentDidMount() {\n    UserService.getModeratorBoard().then(\n      response => {\n        this.setState({\n          content: response.data\n        });\n      },\n      error => {\n        this.setState({\n          content:\n            (error.response &&\n              error.response.data &&\n              error.response.data.message) ||\n            error.message ||\n            error.toString()\n        });\n      }\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <header className=\"jumbotron\">\n          <h3>{this.state.content}</h3>\n        </header>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport {Table} from 'react-bootstrap';\nimport {Button,ButtonToolbar} from 'react-bootstrap';\nimport {AddDepModal} from './AddDepModal';\nimport {EditDepModal} from './EditDepModal';\n\nimport UserService from \"../services/user.service\";\n\nexport default class BoardAdmin extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      //content: \"\"\n      deps:[], addModalShow:false, editModalShow:false\n    };\n  }\n\n /* componentDidMount() {\n    UserService.getAdminBoard().then(\n      response => {response=>response.json()\n      }, \n      data=>{\n        this.setState({deps:data});\n    },\n      error => {\n        this.setState({\n          content:\n            (error.response &&\n              error.response.data &&\n              error.response.data.message) ||\n            error.message ||\n            error.toString()\n        });\n      }\n    );\n  }*/\n\n  componentDidMount() {\n    UserService.getAdminBoard().then(\n      response => {\n        this.setState({\n          deps: response.data\n          //deps:data\n        });\n      },\n      error => {\n        this.setState({\n          deps:\n            (error.response &&\n              error.response.data &&\n              error.response.data.message) ||\n            error.message ||\n            error.toString()\n        });\n      }\n    );\n  }\n\n  componentDidUpdate(prevProps){\n    console.log('Jestem w did update')\nif (this.props.alertId !== prevProps.alertId) {\n    this.refreshList();\n    console.log('Jestem w warunku')\n  }\n}\n\ndeleteDep(alertId){\n  if(window.confirm('Jesteś pewien?')){\n      fetch(process.env.REACT_APP_API+'alert/'+alertId,{\n          method:'DELETE',\n          header:{'Accept':'application/json',\n      'Content-Type':'application/json'}\n      })\n  }\n}\n\n  render() {\n    const {deps, alertId, userId, exchange, course, currency, status}=this.state;\n        let addModalClose=()=>this.setState({addModalShow:false});\n        let editModalClose=()=>this.setState({editModalShow:false});\n        return(\n            <div >\n                <Table className=\"mt-4\" striped bordered hover size=\"sm\">\n                    <thead>\n                        <tr>\n                            <th>AlertId</th>\n                        <th>UserId</th>\n                        <th>Giełda</th>\n                        <th>Kurs</th>\n                        <th>Obecny kurs</th>\n                        <th>Status</th>\n                        <th>Options</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {deps.map(dep=>\n                            <tr key={dep.alertId}>\n                                <td>{dep.alertId}</td>\n                                <td>{dep.userId}</td>\n                                <td>{dep.exchange}</td>\n                                <td>{dep.course}</td>\n                                <td>{dep.currency}</td>\n                                <td>{dep.status}</td>\n                                <td>\n<ButtonToolbar>\n    <Button className=\"mr-2\" variant=\"info\"\n    onClick={()=>this.setState({editModalShow:true,\n        alertId:dep.alertId,userId:dep.userId,exchange:dep.exchange,course:dep.course,currency:dep.currency,status:dep.status })}>\n            Edit\n        </Button>\n\n        <Button className=\"mr-2\" variant=\"danger\"\n    onClick={()=>this.deleteDep(dep.alertId)}>\n            Delete\n        </Button>\n\n        <EditDepModal show={this.state.editModalShow}\n        onHide={editModalClose}\n        alertId={alertId}\n        userId={userId}\n        exchange={exchange}\n        course={course}\n        currency={currency}\n        status={status}\n        />\n</ButtonToolbar>\n\n                                </td>\n\n                            </tr>)}\n                    </tbody>\n\n                </Table>\n\n                <ButtonToolbar>\n                    <Button variant='primary'\n                    onClick={()=>this.setState({addModalShow:true})}>\n                    Add Department</Button>\n\n                    <AddDepModal show={this.state.addModalShow}\n                    onHide={addModalClose}/>\n                </ButtonToolbar>\n            </div>\n        )\n  }\n}\n","/*\nimport logo from './logo.svg';\nimport './App.css';\n\nimport {Home} from './Home';\nimport {Department} from './Department';\nimport {Employee} from './Employee';\nimport {Navigation} from './Navigation';\n\nimport {BrowserRouter, Route, Switch} from 'react-router-dom';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n    <div className=\"container\">\n     <h3 className=\"m-3 d-flex justify-content-center\">\n       React JS Tutorial\n     </h3>\n\n     <Navigation/>\n\n     <Switch>\n       <Route path='/' component={Home} exact/>\n       <Route path='/department' component={Department}/>\n       <Route path='/employee' component={Employee}/>\n     </Switch>\n    </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n*/\nimport React, { Component } from \"react\";\nimport { Switch, Route, Link } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\n\nimport AuthService from \"./services/auth.service\";\n\nimport Login from \"./components/login.component\";\nimport Register from \"./components/register.component\";\nimport Home from \"./components/home.component\";\nimport Profile from \"./components/profile.component\";\nimport BoardUser from \"./components/board-user.component\";\nimport BoardModerator from \"./components/board-moderator.component\";\nimport BoardAdmin from \"./components/board-admin.component\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.logOut = this.logOut.bind(this);\n\n    this.state = {\n      showModeratorBoard: false,\n      showAdminBoard: false,\n      currentUser: undefined,\n    };\n  }\n\n  componentDidMount() {\n    const user = AuthService.getCurrentUser();\n\n    if (user) {\n      this.setState({\n        currentUser: user,\n        //showModeratorBoard: user.roles.includes(\"ROLE_MODERATOR\"),\n        showAdminBoard: user.role.includes(\"Admin\")\n      });\n    }\n  }\n\n  logOut() {\n    AuthService.logout();\n  }\n\n  render() {\n    const { currentUser, showModeratorBoard, showAdminBoard } = this.state;\n\n    return (\n      <div>\n        <nav className=\"navbar navbar-expand navbar-dark bg-dark\">\n          <Link to={\"/\"} className=\"navbar-brand\">\n            bezKoder\n          </Link>\n          <div className=\"navbar-nav mr-auto\">\n            <li className=\"nav-item\">\n              <Link to={\"/home\"} className=\"nav-link\">\n                Home\n              </Link>\n            </li>\n\n            {showModeratorBoard && (\n              <li className=\"nav-item\">\n                <Link to={\"/mod\"} className=\"nav-link\">\n                  Moderator Board\n                </Link>\n              </li>\n            )}\n\n            {showAdminBoard && (\n              <li className=\"nav-item\">\n                <Link to={\"/admin\"} className=\"nav-link\">\n                  Admin Board\n                </Link>\n              </li>\n            )}\n\n            {currentUser && (\n              <li className=\"nav-item\">\n                <Link to={\"/user\"} className=\"nav-link\">\n                  User\n                </Link>\n              </li>\n            )}\n          </div>\n\n          {currentUser ? (\n            <div className=\"navbar-nav ml-auto\">\n              <li className=\"nav-item\">\n                <Link to={\"/profile\"} className=\"nav-link\">\n                  {currentUser.username}\n                </Link>\n              </li>\n              <li className=\"nav-item\">\n                <a href=\"/login\" className=\"nav-link\" onClick={this.logOut}>\n                  LogOut\n                </a>\n              </li>\n            </div>\n          ) : (\n            <div className=\"navbar-nav ml-auto\">\n              <li className=\"nav-item\">\n                <Link to={\"/login\"} className=\"nav-link\">\n                  Login\n                </Link>\n              </li>\n\n              <li className=\"nav-item\">\n                <Link to={\"/register\"} className=\"nav-link\">\n                  Sign Up\n                </Link>\n              </li>\n            </div>\n          )}\n        </nav>\n\n        <div className=\"container mt-3\">\n          <Switch>\n            <Route exact path={[\"/\", \"/home\"]} component={Home} />\n            <Route exact path=\"/login\" component={Login} />\n            <Route exact path=\"/register\" component={Register} />\n            <Route exact path=\"/profile\" component={Profile} />\n            <Route path=\"/user\" component={BoardUser} />\n            <Route path=\"/mod\" component={BoardModerator} />\n            <Route path=\"/admin\" component={BoardAdmin} />\n          </Switch>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","/*import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n*/\n\n\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();"],"sourceRoot":""}